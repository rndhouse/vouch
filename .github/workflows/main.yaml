name: CI for release tags

on:
  push:
    tags:
      - "v*"

jobs:
  once:
    name: Create single release for all builds
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
  build:
    name: OS specific build
    needs: once
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          
          - os: macos-latest
            target: x86_64-apple-darwin

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl

    steps:
      - name: Get version from tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Setup musl
        if: "contains(matrix.target, 'x86_64-unknown-linux-musl')"
        run: |
          sudo apt install musl-tools
          mkdir ${{ github.workspace }}/musl
          wget https://github.com/openssl/openssl/archive/OpenSSL_1_1_1f.tar.gz
          tar zxvf OpenSSL_1_1_1f.tar.gz 
          cd openssl-OpenSSL_1_1_1f/
          CC="musl-gcc -static -idirafter /usr/include/ -idirafter /usr/include/x86_64-linux-gnu/ -fPIE -pie" ./Configure no-shared no-async --prefix=${{ github.workspace }}/musl --openssldir=${{ github.workspace }}/musl/ssl linux-x86_64 -DOPENSSL_NO_SECURE_MEMORY
          make depend
          make -j$(nproc)
          make install
          cd ${{ github.workspace }}
          echo "tree: " && tree ${{ github.workspace }}/musl -L 2
        # -DOPENSSL_NO_SECURE_MEMORY due to https://github.com/openssl/openssl/issues/7207

      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build musl
        if: "contains(matrix.target, 'x86_64-unknown-linux-musl')"
        env:
          PKG_CONFIG_ALLOW_CROSS: 1
          OPENSSL_STATIC: true
          OPENSSL_DIR: ${{ github.workspace }}/musl/ssl
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --locked --verbose --package vouch --target ${{ matrix.target }}

      - name: Build non-musl
        if: "!contains(matrix.target, 'x86_64-unknown-linux-musl')"
        env:
          OPENSSL_STATIC: yes
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --locked --verbose --package vouch --target ${{ matrix.target }}

      - name: Archive release assets
        id: archive_assets
        run: |
          7z a -tzip ${{ github.workspace }}/vouch-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.zip ${{ github.workspace }}/target/release/vouch ${{ github.workspace }}/LICENSE

      - name: Upload release archive
        id: upload_archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/vouch-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.zip
          asset_name: vouch-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.zip
          asset_content_type: application/octet-stream
